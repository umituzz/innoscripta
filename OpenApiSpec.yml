openapi: 3.0.3
info:
  title: Innoscripta
  version: 1.0.0
  contact: {}
servers:
  - url: http://localhost:8000
  - url: https://content.guardianapis.com
  - url: https://newsapi.org
  - url: https://api.mediastack.com
  - url: https://api.nytimes.com
  - url: http://localhost:9200
paths:
  /api/register:
    post:
      tags:
        - Auth
      summary: Register
      description: Register
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: umituz998@gmail.com
                name:
                  type: string
                  example: Ümit UZ
                password:
                  type: string
                  example: '123456789'
                password_confirmation:
                  type: string
                  example: '123456789'
            examples:
              Register:
                value:
                  email: umituz998@gmail.com
                  name: Ümit UZ
                  password: '123456789'
                  password_confirmation: '123456789'
      responses:
        '200':
          description: ''
  /api/login:
    post:
      tags:
        - Auth
      summary: Login
      description: Login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: umituz9999@gmail.com
                password:
                  type: string
                  example: '123456789'
            examples:
              Login:
                value:
                  email: umituz9999@gmail.com
                  password: '123456789'
      responses:
        '200':
          description: ''
  /api/logout:
    post:
      tags:
        - Auth
      summary: Logout
      description: Logout
      operationId: logout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: umituz9999@gmail.com
                password:
                  type: string
                  example: '123456789'
            examples:
              Logout:
                value:
                  email: umituz9999@gmail.com
                  password: '123456789'
      responses:
        '200':
          description: ''
  /api/articles:
    get:
      tags:
        - Article
      summary: Articles
      description: Articles
      operationId: articles
      requestBody:
        content:
          application/json:
            examples:
              Articles:
                value: "{\r\n    //\"searchTerm\": \"Test\"\r\n    //\"sourceId\": 1,\r\n    //\"categoryId\": 1,\r\n    //\"authorId\": 1\r\n}"
      responses:
        '200':
          description: ''
  /api/articles/preferences:
    get:
      tags:
        - Preference
      summary: Preferences
      description: Preferences
      operationId: preferences
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sources:
                  type: array
                  items:
                    type: number
                    example: 1
                  example:
                    - 1
                    - 2
                    - 3
            examples:
              Preferences:
                value:
                  sources:
                    - 1
                    - 2
                    - 3
      responses:
        '200':
          description: ''
  /api/articles/scientists-hail-pioneering-software-in-hunt-for-alien-life:
    get:
      tags:
        - Article
      summary: Article Detail
      description: Article Detail
      operationId: articleDetail
      requestBody:
        content:
          application/json:
            examples:
              Article Detail:
                value: ''
      responses:
        '200':
          description: ''
  /api/user:
    get:
      tags:
        - User
      summary: User
      description: User
      operationId: user
      requestBody:
        content:
          application/json:
            examples:
              User:
                value: ''
      responses:
        '200':
          description: ''
  /api/user/preferences:
    get:
      tags:
        - User
      summary: Preferences
      description: Preferences
      operationId: preferences1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sources:
                  type: array
                  items:
                    type: number
                    example: 1
                  example:
                    - 1
                    - 2
                    - 3
            examples:
              Preferences:
                value:
                  sources:
                    - 1
                    - 2
                    - 3
      responses:
        '200':
          description: ''
  /api/user/preferences/sources:
    post:
      tags:
        - User
      summary: Source Preferences
      description: Source Preferences
      operationId: sourcePreferences
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceIds:
                  type: array
                  items:
                    type: number
                    example: 1
                  example:
                    - 1
                    - 2
                    - 3
            examples:
              Source Preferences:
                value:
                  sourceIds:
                    - 1
                    - 2
                    - 3
      responses:
        '200':
          description: ''
  /api/user/preferences/categories:
    post:
      tags:
        - User
      summary: Category Preferences
      description: Category Preferences
      operationId: categoryPreferences
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryIds:
                  type: array
                  items:
                    type: number
                    example: 1
                  example:
                    - 1
                    - 2
                    - 3
            examples:
              Category Preferences:
                value:
                  categoryIds:
                    - 1
                    - 2
                    - 3
      responses:
        '200':
          description: ''
  /api/user/preferences/authors:
    post:
      tags:
        - User
      summary: Author Preferences
      description: Author Preferences
      operationId: authorPreferences
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                authorIds:
                  type: array
                  items:
                    type: number
                    example: 1
                  example:
                    - 1
                    - 2
                    - 3
            examples:
              Author Preferences:
                value:
                  authorIds:
                    - 1
                    - 2
                    - 3
      responses:
        '200':
          description: ''
  /search:
    get:
      tags:
        - API
      summary: Guardian API
      description: Guardian API
      operationId: guardianApi
      parameters:
        - name: api-key
          in: query
          schema:
            type: string
            example: test
      responses:
        '200':
          description: ''
  /v2/top-headlines:
    get:
      tags:
        - API
      summary: News API
      description: News API
      operationId: newsApi
      parameters:
        - name: country
          in: query
          schema:
            type: string
            example: us
        - name: apiKey
          in: query
          schema:
            type: string
            example: c95ec738abe74b708871b99d6673cc85
      responses:
        '200':
          description: ''
  /v1/news:
    get:
      tags:
        - API
      summary: Media Stack API
      description: Media Stack API
      operationId: mediaStackApi
      parameters:
        - name: access_key
          in: query
          schema:
            type: string
            example: 6490528b65c9d28894748cf10c6d0a52
      responses:
        '200':
          description: ''
  /svc/mostpopular/v2/viewed/1.json:
    get:
      tags:
        - API
      summary: Newyork Times API
      description: Newyork Times API
      operationId: newyorkTimesApi
      parameters:
        - name: api-key
          in: query
          schema:
            type: string
            example: LqRN1w7XrZYdVTTo5aYSwLlVtJXBEcRS
      responses:
        '200':
          description: ''
  /_cat/nodes:
    get:
      tags:
        - Elasticsearch
      summary: Nodes Info
      description: Nodes Info
      operationId: nodesInfo
      parameters:
        - name: v
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /_all:
    delete:
      tags:
        - Elasticsearch
      summary: Delete All Indexes
      description: Delete All Indexes
      operationId: deleteAllIndexes
      responses:
        '200':
          description: ''
  /_cluster/health:
    get:
      tags:
        - Elasticsearch
      summary: Cluster Health
      description: Cluster Health
      operationId: clusterHealth
      responses:
        '200':
          description: ''
  /_cat/indices:
    get:
      tags:
        - Elasticsearch
      summary: indices
      description: indices
      operationId: indices
      parameters:
        - name: v
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /_cluster/settings:
    put:
      tags:
        - Elasticsearch
      summary: Cluster Settings Destructive Requires Name
      description: Cluster Settings Destructive Requires Name
      operationId: clusterSettingsDestructiveRequiresName
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                transient:
                  type: object
                  properties:
                    action.destructive_requires_name:
                      type: boolean
                      example: false
            examples:
              Cluster Settings Destructive Requires Name:
                value:
                  transient:
                    action.destructive_requires_name: false
      responses:
        '200':
          description: ''
  /_all/_count:
    get:
      tags:
        - Elasticsearch
      summary: Get All Count
      description: Get All Count
      operationId: getAllCount
      responses:
        '200':
          description: ''
  /:
    get:
      tags:
        - Elasticsearch
      summary: Info
      description: Info
      operationId: info
      responses:
        '200':
          description: ''
  /{table}/_search:
    get:
      tags:
        - Elasticsearch
      summary: Search
      description: Search
      operationId: search
      responses:
        '200':
          description: ''
    parameters:
      - name: table
        in: path
        required: true
        schema:
          type: string
          example: articles
  /{table}/_mapping:
    get:
      tags:
        - Elasticsearch
      summary: Mapping
      description: Mapping
      operationId: mapping
      responses:
        '200':
          description: ''
    parameters:
      - name: table
        in: path
        required: true
        schema:
          type: string
          example: articles
  /_all/_search:
    get:
      tags:
        - Elasticsearch
      summary: All Search
      description: All Search
      operationId: allSearch
      responses:
        '200':
          description: ''
tags:
  - name: Auth
  - name: Article
  - name: User
  - name: Preference
  - name: API
  - name: Elasticsearch
